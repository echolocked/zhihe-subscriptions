{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/subscriptions/webpack/bootstrap","webpack://@flarum/subscriptions/webpack/runtime/compat get default export","webpack://@flarum/subscriptions/webpack/runtime/define property getters","webpack://@flarum/subscriptions/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/subscriptions/webpack/runtime/make namespace object","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/app']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/Model']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@flarum/subscriptions/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flarum/subscriptions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/Component']\"","webpack://@flarum/subscriptions/./src/forum/components/SubscriptionMenuItem.js","webpack://@flarum/subscriptions/./src/forum/components/SubscriptionMenu.js","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/states/GlobalSearchState']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@flarum/subscriptions/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@flarum/subscriptions/./src/forum/components/NewPostNotification.js","webpack://@flarum/subscriptions/external root \"flarum.core.compat['common/extenders']\"","webpack://@flarum/subscriptions/./src/forum/extend.ts","webpack://@flarum/subscriptions/./src/forum/compat.ts","webpack://@flarum/subscriptions/external assign \"flarum.core\"","webpack://@flarum/subscriptions/./src/forum/index.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionBadge.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionControls.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionFilter.js","webpack://@flarum/subscriptions/./src/forum/addSubscriptionSettings.tsx","webpack://@flarum/subscriptions/./src/forum/addSubscriptionCount.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","import Component from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\n\nexport default class SubscriptionMenuItem extends Component {\n  view() {\n    return (\n      <button className=\"SubscriptionMenuItem hasIcon\" onclick={this.attrs.onclick}>\n        {this.attrs.active && icon('fas fa-check', { className: 'Button-icon' })}\n        <span className=\"SubscriptionMenuItem-label\">\n          {icon(this.attrs.icon, { className: 'Button-icon' })}\n          <strong>{this.attrs.label}</strong>\n          <span className=\"SubscriptionMenuItem-description\">{this.attrs.description}</span>\n        </span>\n      </button>\n    );\n  }\n}\n","import app from 'flarum/forum/app';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport icon from 'flarum/common/helpers/icon';\nimport extractText from 'flarum/common/utils/extractText';\nimport classList from 'flarum/common/utils/classList';\n\nimport SubscriptionMenuItem from './SubscriptionMenuItem';\n\nexport default class SubscriptionMenu extends Dropdown {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.options = [\n      {\n        subscription: null,\n        icon: 'far fa-star',\n        label: app.translator.trans('flarum-subscriptions.forum.sub_controls.not_following_button'),\n        description: app.translator.trans('flarum-subscriptions.forum.sub_controls.not_following_text'),\n      },\n      {\n        subscription: 'follow',\n        icon: 'fas fa-star',\n        label: app.translator.trans('flarum-subscriptions.forum.sub_controls.following_button'),\n        description: app.translator.trans('flarum-subscriptions.forum.sub_controls.following_text'),\n      },\n      // ZHIHE MODIFICATION: Added follow_op subscription option\n      {\n        subscription: 'follow_op',\n        icon: 'fas fa-user-star',\n        label: app.translator.trans('flarum-subscriptions.forum.sub_controls.following_op_button'),\n        description: app.translator.trans('flarum-subscriptions.forum.sub_controls.following_op_text'),\n      },\n      {\n        subscription: 'ignore',\n        icon: 'far fa-eye-slash',\n        label: app.translator.trans('flarum-subscriptions.forum.sub_controls.ignoring_button'),\n        description: app.translator.trans('flarum-subscriptions.forum.sub_controls.ignoring_text'),\n      },\n    ];\n  }\n\n  view() {\n    const discussion = this.attrs.discussion;\n    const subscription = discussion.subscription();\n\n    let buttonLabel = app.translator.trans('flarum-subscriptions.forum.sub_controls.follow_button');\n    let buttonIcon = 'far fa-star';\n    const buttonClass = 'SubscriptionMenu-button--' + subscription;\n\n    switch (subscription) {\n      case 'follow':\n        buttonLabel = app.translator.trans('flarum-subscriptions.forum.sub_controls.following_button');\n        buttonIcon = 'fas fa-star';\n        break;\n\n      // ZHIHE MODIFICATION: Handle follow_op button state\n      case 'follow_op':\n        buttonLabel = app.translator.trans('flarum-subscriptions.forum.sub_controls.following_op_button');\n        buttonIcon = 'fas fa-user-star';\n        break;\n\n      case 'ignore':\n        buttonLabel = app.translator.trans('flarum-subscriptions.forum.sub_controls.ignoring_button');\n        buttonIcon = 'far fa-eye-slash';\n        break;\n\n      default:\n      // no default\n    }\n\n    const preferences = app.session.user.preferences();\n    const notifyEmail = preferences['notify_newPost_email'];\n    const notifyAlert = preferences['notify_newPost_alert'];\n    const tooltipText = extractText(\n      app.translator.trans(\n        notifyEmail ? 'flarum-subscriptions.forum.sub_controls.notify_email_tooltip' : 'flarum-subscriptions.forum.sub_controls.notify_alert_tooltip'\n      )\n    );\n\n    const shouldShowTooltip = (notifyEmail || notifyAlert) && subscription === null;\n\n    const button = (\n      <Button\n        className={classList('Button', 'SubscriptionMenu-button', buttonClass)}\n        icon={buttonIcon}\n        onclick={this.saveSubscription.bind(this, discussion, ['follow', 'ignore', 'follow_op'].indexOf(subscription) !== -1 ? null : 'follow')}\n      >\n        {buttonLabel}\n      </Button>\n    );\n\n    return (\n      <div className=\"Dropdown ButtonGroup SubscriptionMenu\">\n        {shouldShowTooltip ? (\n          <Tooltip text={tooltipText} position=\"bottom\">\n            {button}\n          </Tooltip>\n        ) : (\n          button\n        )}\n\n        <button className={classList('Dropdown-toggle Button Button--icon', buttonClass)} data-toggle=\"dropdown\">\n          {icon('fas fa-caret-down', { className: 'Button-icon' })}\n        </button>\n\n        <ul className=\"Dropdown-menu dropdown-menu Dropdown-menu--right\">\n          {this.options.map((attrs) => (\n            <li>\n              <SubscriptionMenuItem\n                {...attrs}\n                onclick={this.saveSubscription.bind(this, discussion, attrs.subscription)}\n                active={subscription === attrs.subscription}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  saveSubscription(discussion, subscription) {\n    discussion.save({ subscription });\n\n    this.$('.SubscriptionMenu-button').tooltip('hide');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/GlobalSearchState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class NewPostNotification extends Notification {\n  icon() {\n    return 'fas fa-star';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const discussion = notification.subject();\n    const content = notification.content() || {};\n\n    return app.route.discussion(discussion, content.postNumber);\n  }\n\n  content() {\n    return app.translator.trans('flarum-subscriptions.forum.notifications.new_post_text', { user: this.attrs.notification.fromUser() });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","import Extend from 'flarum/common/extenders';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Discussion from 'flarum/common/models/Discussion';\n\nexport default [\n  new Extend.Routes() //\n    .add('following', '/following', IndexPage),\n\n  new Extend.Model(Discussion) //\n    .attribute('subscription'),\n];\n","import NewPostNotification from './components/NewPostNotification';\nimport SubscriptionMenu from './components/SubscriptionMenu';\nimport SubscriptionMenuItem from './components/SubscriptionMenuItem';\n\nexport default {\n  'subscriptions/components/NewPostNotification': NewPostNotification,\n  'subscriptions/components/SubscriptionMenu': SubscriptionMenu,\n  'subscriptions/components/SubscriptionMenuItem': SubscriptionMenuItem,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core;","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\n\nimport addSubscriptionBadge from './addSubscriptionBadge';\nimport addSubscriptionControls from './addSubscriptionControls';\nimport addSubscriptionFilter from './addSubscriptionFilter';\nimport addSubscriptionSettings from './addSubscriptionSettings';\nimport addSubscriptionCount from './addSubscriptionCount';\n\nimport NewPostNotification from './components/NewPostNotification';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('subscriptions', function () {\n  app.notificationComponents.newPost = NewPostNotification;\n\n  addSubscriptionBadge();\n  addSubscriptionControls();\n  addSubscriptionFilter();\n  addSubscriptionSettings();\n  addSubscriptionCount();\n\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('newPost', {\n      name: 'newPost',\n      icon: 'fas fa-star',\n      label: app.translator.trans('flarum-subscriptions.forum.settings.notify_new_post_label'),\n    });\n  });\n});\n\n// Expose compat API\nimport subscriptionsCompat from './compat';\nimport { compat } from '@flarum/core/forum';\n\nObject.assign(compat, subscriptionsCompat);\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Badge from 'flarum/common/components/Badge';\n\nexport default function addSubscriptionBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    let badge;\n\n    switch (this.subscription()) {\n      case 'follow':\n        badge = <Badge label={app.translator.trans('flarum-subscriptions.forum.badge.following_tooltip')} icon=\"fas fa-star\" type=\"following\" />;\n        break;\n\n      case 'ignore':\n        badge = <Badge label={app.translator.trans('flarum-subscriptions.forum.badge.ignoring_tooltip')} icon=\"far fa-eye-slash\" type=\"ignoring\" />;\n        break;\n    }\n\n    if (badge) {\n      badges.add('subscription', badge);\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Button from 'flarum/common/components/Button';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\n\nimport SubscriptionMenu from './components/SubscriptionMenu';\n\nexport default function addSubscriptionControls() {\n  extend(DiscussionControls, 'userControls', function (items, discussion, context) {\n    if (app.session.user && !(context instanceof DiscussionPage)) {\n      const states = {\n        none: { label: app.translator.trans('flarum-subscriptions.forum.discussion_controls.follow_button'), icon: 'fas fa-star', save: 'follow' },\n        follow: { label: app.translator.trans('flarum-subscriptions.forum.discussion_controls.unfollow_button'), icon: 'far fa-star', save: null },\n        ignore: { label: app.translator.trans('flarum-subscriptions.forum.discussion_controls.unignore_button'), icon: 'fas fa-eye', save: null },\n        // ZHIHE MODIFICATION: Added follow_op subscription type\n        follow_op: { label: app.translator.trans('flarum-subscriptions.forum.discussion_controls.unfollow_button'), icon: 'fas fa-user-star', save: null },\n      };\n\n      const subscription = discussion.subscription() || 'none';\n\n      items.add(\n        'subscription',\n        <Button icon={states[subscription].icon} onclick={discussion.save.bind(discussion, { subscription: states[subscription].save })}>\n          {states[subscription].label}\n        </Button>\n      );\n    }\n  });\n\n  extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n    if (app.session.user) {\n      const discussion = this.discussion;\n\n      items.add('subscription', <SubscriptionMenu discussion={discussion} />, 80);\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport GlobalSearchState from 'flarum/forum/states/GlobalSearchState';\n\nexport default function addSubscriptionFilter() {\n  extend(IndexPage.prototype, 'navItems', function (items) {\n    if (app.session.user) {\n      const params = app.search.stickyParams();\n\n      items.add(\n        'following',\n        <LinkButton href={app.route('following', params)} icon=\"fas fa-star\">\n          {app.translator.trans('flarum-subscriptions.forum.index.following_link')}\n        </LinkButton>,\n        50\n      );\n    }\n  });\n\n  extend(IndexPage.prototype, 'setTitle', function () {\n    if (app.current.get('routeName') === 'following') {\n      app.setTitle(app.translator.trans('flarum-subscriptions.forum.following.meta_title_text'));\n    }\n  });\n\n  extend(GlobalSearchState.prototype, 'params', function (params) {\n    // We can't set `q` here directly, as that would make the search bar\n    // think that text has been entered, and display the \"clear\" button.\n    params.onFollowing = app.current.get('routeName') === 'following';\n  });\n\n  extend(DiscussionListState.prototype, 'requestParams', function (params) {\n    if (this.params.onFollowing) {\n      params.filter ||= {};\n\n      if (params.filter.q) {\n        params.filter.q += ' is:following';\n      } else {\n        params.filter.subscription = 'following';\n      }\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport Switch from 'flarum/common/components/Switch';\n\nexport default function () {\n  extend(SettingsPage.prototype, 'notificationsItems', function (this: SettingsPage, items) {\n    items.add(\n      'followAfterReply',\n      <Switch\n        state={this.user.preferences().followAfterReply}\n        onchange={(value) => {\n          this.followAfterReplyLoading = true;\n\n          this.user.savePreferences({ followAfterReply: value }).then(() => {\n            this.followAfterReplyLoading = false;\n            m.redraw();\n          });\n        }}\n        loading={this.followAfterReplyLoading}\n      >\n        {app.translator.trans('flarum-subscriptions.forum.settings.follow_after_reply_label')}\n      </Switch>\n    );\n\n    items.add(\n      'notifyForAllPosts',\n      <Switch\n        id=\"flarum_subscriptions__notify_for_all_posts\"\n        state={!!this.user!.preferences()?.['flarum-subscriptions.notify_for_all_posts']}\n        onchange={(val: boolean) => {\n          this.user!.savePreferences({ 'flarum-subscriptions.notify_for_all_posts': val });\n        }}\n      >\n        {app.translator.trans('flarum-subscriptions.forum.settings.notify_for_all_posts_label')}\n      </Switch>\n    );\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\n\nexport default function addSubscriptionCount() {\n  extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n    const discussion = this.attrs.discussion;\n    const subscriptionCount = discussion.attribute('subscriptionCount') || 0;\n\n    // Debug: log the subscription count\n    console.log('Subscription count for discussion', discussion.attribute('title'), ':', subscriptionCount);\n\n    // ZHIHE MODIFICATION: Always show subscription count (including 0)\n    // Follow the same pattern as flarum-discussion-views\n    items.add(\n      'subscription-count',\n      m('span', [\n        m('i', { className: 'fas fa-star', 'aria-hidden': 'true' }),\n        subscriptionCount\n      ]),\n      -1000 // Set very low priority to make it rightmost\n    );\n  });\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","SubscriptionMenuItem","_Component","apply","arguments","view","m","className","onclick","this","attrs","active","icon","label","description","Component","SubscriptionMenu","_Dropdown","_proto","oninit","vnode","options","subscription","app","trans","_this","discussion","buttonLabel","buttonIcon","buttonClass","preferences","user","notifyEmail","notifyAlert","tooltipText","extractText","shouldShowTooltip","button","Button","classList","saveSubscription","indexOf","Tooltip","text","position","map","assign","save","$","tooltip","Dropdown","NewPostNotification","_Notification","href","notification","subject","content","postNumber","fromUser","Notification","Extend","add","IndexPage","Discussion","attribute","newPost","extend","badges","badge","Badge","type","DiscussionControls","items","context","DiscussionPage","states","none","follow","ignore","follow_op","params","stickyParams","LinkButton","GlobalSearchState","onFollowing","DiscussionListState","filter","q","SettingsPage","_preferences","Switch","state","followAfterReply","onchange","followAfterReplyLoading","savePreferences","then","redraw","loading","id","val","DiscussionListItem","subscriptionCount","console","log","NotificationGrid","name","subscriptionsCompat"],"sourceRoot":""}